---
import Layout from '@/layouts/Layout.astro';
import { restaurants } from '@/consts/restaurantes';

import Location from '@/assets/svg/map-pin.svg';
import Food from '@/assets/svg/tools-kitchen-3.svg';
import Phone from '@/assets/svg/phone.svg';
import Whatsapp from '@/assets/svg/brand-whatsapp.svg';
import Clock from '@/assets/svg/clock.svg';
import { Image } from 'astro:assets';
import MenuSection from '@/React/MenuSection';
import ShareButton from '@/React/Buttons/ShareButton';
// Esto importa todos los SVGs de la carpeta "amenidades"
const svgModules = import.meta.glob(
  "/src/assets/amenidades/*.svg",
  { eager: true, import: "default" },
);

// Crear un mapa por nombre de archivo
const amenidadesMap = Object.fromEntries(
  Object.entries(svgModules).map(([path, mod]) => {
    const filename = path.split("/").pop(); // ej: "area-exterior.svg"
    return [filename, mod];
  }),
);


const { id } = Astro.params;
// Descripción dinámica
export function getStaticPaths() {
  return restaurants.map(({ id }) => {
    return { params: { id } };
  });
}
const restaurant = restaurants.find((res) => res.id === id);
var tomarPedido = false; // Cambia esto si quieres que se tome pedido
if (restaurant?.plan.id === 2) {
  
  tomarPedido = true; // Si el restaurante tiene plan de toma de pedidos, se activa
}

const description = `Perfil y Menu de ${id}`;
export const prerender = true;

---

<Layout title={`Mva Foods - ${restaurant?.name}`} description={description}>
  {
    restaurant ? (
      <div class="flex flex-col md:flex-row md:gap-[2%] flex-wrap content-start min-h-screen pt-24 pb-10 px-4 lg:px-24 bg-gradient-to-r from-orange-100 to-orange-50">
        <!-- Card lateral -->
        <div class="w-full md:w-1/4 bg-white shadow-lg rounded-lg text-center feature-step p-6">
          <Image
            src={restaurant.image}
            alt={restaurant.name}
            title={restaurant.name}
            width="200"
            height="200"
            class="inline-block w-22 transition-transform group-hover:scale-110"
            style={{"viewTransitionName": restaurant.id}}
          />
          
          
          <h2 class="text-2xl md:text-4xl font-semibold text-balance text-orange-600 mt-4">
            {restaurant.name}
          </h2>
          <ShareButton title={restaurant.name} client:only="react" />

          <div class="text-start flex flex-col gap-4 mt-4">
            <div class="flex items-start">
              <Food class="text-orange-600 w-5 h-5 mr-2" />
              <h2 class="text-md font-semibold text-orange-600">
                {restaurant.tipos?.join(", ") ?? "Sin categoría"}
              </h2>
            </div>
            <div class="flex items-start">
              <div>
              <Location class="text-orange-600 w-5 h-5 mr-2" />

              </div>
              <h2 class="text-md font-semibold text-orange-600">
                {restaurant.direccion}
              </h2>
            </div>
            <div class="flex items-start">
              <Phone class="text-orange-600 w-5 h-5 mr-2 " />
              <h2 class="text-md font-semibold text-orange-600">
                {restaurant.phone}
              </h2>
            </div>
            <div class="flex items-start">
              <Whatsapp class="text-orange-600 w-5 h-5 mr-2" />
              <h2 class="text-md font-semibold text-orange-600">
                {restaurant.phone}
              </h2>
            </div>
            <div class="flex">
              <Clock class="text-orange-600 w-5 h-5 mr-2 mt-1" />
              <div class="flex flex-col">
                {
                  restaurant.horario.map((horario) => (
                    <div class="grid grid-cols-2 justify-between lg:gap-4 text-md font-semibold text-orange-600">
                      <p>{horario.dia}: </p> 
                      <p>{horario.apertura} a {horario.cierre}</p>
                    </div>
                  ))
                }
              </div>
            </div>
            <div class="flex items-start flex-wrap gap-2">
              {//dividir los platos por categoria
                restaurant.amnidades.map((amnidade) => {
                  const SvgIcon = amenidadesMap[amnidade.svg];
                  return (
                     <div class="flex flex-col items-center w-20 text-center group">
                      {SvgIcon && (
                        <SvgIcon class="w-10 h-10 mb-1 text-orange-600 fill-current transition-transform duration-200 group-hover:scale-110" />
                      )}
                      <h2 class="text-sm font-semibold text-orange-600">
                        {amnidade.name}
                      </h2>
                    </div>
                  );
                })
              }
            </div>
            <div class="relative w-full h-80 overflow-hidden rounded-lg">
              <iframe 
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d28458.6750399274!2d-101.44747150906393!3d26.924612!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x868bcdc372021f57%3A0x1f92eebe5a1ab44a!2sBurger%20King!5e0!3m2!1ses!2smx!4v1749876497694!5m2!1ses!2smx" 
                class="absolute top-0 left-0 w-full h-full border-0 lg:h-96"
                allowfullscreen 
                loading="lazy" 
                referrerpolicy="no-referrer-when-downgrade">
              </iframe>
            </div>

          </div>
        </div>

        <!-- Contenido central -->
        <div class="w-full md:flex-1 bg-white shadow-lg rounded-lg text-center feature-step p-6 mt-6 md:mt-0">
          <MenuSection menu={restaurant?.menu ?? []} titulo="Menú" tomaPedido={tomarPedido} client:load />
        </div>
      </div>
    ) : (
      <div class="p-10 text-center text-red-600 text-xl md:text-2xl">
        Restaurante no encontrado.
      </div>
    )
  }
</Layout>

